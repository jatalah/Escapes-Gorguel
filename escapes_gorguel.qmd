---
title: "Escapes El Gorguel"
date: "`r format(Sys.time(), '%d %B, %Y')`"
author:
  - name: Javier Atalah 
format:
  html:
    toc: true
    code-fold: true
    number-sections: true
    toc-location: left
    fig-dpi: 300
    embed-resources: true
editor: visual
execute:
  warning: false
  cache: false
---

![](figures/logo-ua.jpg){width="307"}

```{r setup}
library(readxl)
library(janitor)
library(glmmTMB)
library(lubridate)
library(broom.mixed)
library(knitr)
library(skimr)
library(ggpubr)
library(sjPlot)
library(sf)
library(leaflet)
library(raster)
library(DHARMa)
library(ggspatial)
library(cowplot)
library(mapview)
library(stars)
library(rnaturalearth)
library(metR) # for geom_text_contour
library(geosphere) # for distance calculation using distm
theme_set(theme_minimal())
filter <- dplyr::filter
```

# Survey design

-   The objective of the study was to quantify spatio-temporal changes in fish density after a massive seabream escape event in July 2014.

-   Surveys were conducted on 14 July 2014, five days after the escape event, and then in August 2014 and September 2014.

-   Density was determined by snorkel-based dive surveys at eight different locations.

-   At each location two sites were surveyed, with six replicates per site, except Gorguel in July (12 replicates) and Escombreras in August and September when no surveys were conducted.

-   Sampling units consisted of 500 m^2^ transects sampled visually by snorkellers swimming 50 m in a straight line and observing the area within 2.5 m on either side (5 x 100 m^2^).

-   Snorkellers estimated the density and the size of each fish in the transect.

::: callout-note
## Note

Density data were standardised to fish per 100 m^2^
:::

# Read and summarise data

```{r}
# read data
murcia <- 
  read_sf('C:/Users/javiera/OneDrive - Cawthron/UA/blue_food_consumption/data/CCAA/Comunidades_Autonomas_ETRS89_30N.shp') %>% 
  filter(Texto_Alt == "Murcia")

locations <- st_read("data/coords_gorguel.kml", quiet = T)

esc_d <- 
  read_csv('data/gorguel_density_data_clean.csv', show_col_types = FALSE) %>% 
  mutate(month = fct_relevel(month, c("July","August"))) 


# skim(esc_d)
```

```{r}
#| label: tbl-exp_design
#| tbl-cap: Number of transects per month at each locality.
esc_d %>% 
  tabyl(month, localidad) %>% 
  kable() 
```

# Interactive map of the study locations

```{r}
#| label: fig-map_inter
#| column: screen
#| fig-cap: Map of the study area.
leaflet(locations) %>%
  setView(lng = -1,
          lat = 37.6,
          zoom = 11) %>%
  addTiles() %>%
  addProviderTiles("Esri.WorldImagery") %>%
  addCircleMarkers()
```

## Bathymetry map

```{r}
#| label: fig-map_bathy
#| #| column: screen
#| fig-cap: Map of the coastal bathymetry in study area.
murcia_bathy_cropped <- raster('data/murcia_bathy_cropped.grd')
mapview(murcia_bathy_cropped)@map
```

## Map figure for the manuscript

```{r}
#| label: fig-map_inter2
#| fig-cap: Map of the study area.
# read data ---------
bathyEmod <- read_stars('data/depth.tif') %>% as_tibble() %>% rename(depth = depth.tif)
coords <- read_csv('data/coords.csv')

# Murcia coast map----------
bbox <- 
  st_bbox(c(
    xmin = -1.3,
    xmax = 0.7,
    ymin = 37.5,
    ymax = 37.8
  ))

murcia <- 
  read_sf('C:/Users/javiera/OneDrive - Cawthron/UA/blue_food_consumption/data/CCAA/Comunidades_Autonomas_ETRS89_30N.shp') %>% 
  dplyr::filter(Texto_Alt == "Murcia") %>% 
  st_transform (4326) %>% 
  st_crop(bbox) 

sites_map <- 
ggplot() +
  geom_contour(
    data = bathyEmod,
    aes(x, y, z = depth),
    color = 'gray70',
    breaks = c(-10,-25,-50,-100)
  ) +
  geom_text_contour(
    data = bathyEmod,
    aes(x, y, z = depth),
    stroke = 0.2,
    breaks = c(-10,-25,-50,-100),
    size = 2.5,
    color = "gray70",
    check_overlap = T,
    label.placer = label_placer_n(3)
  ) +
  geom_sf(data = murcia, fill = 'gray60', color = "white") +
  geom_point(data = coords, aes(X, Y), size = 2) +
  ggrepel::geom_label_repel(
    data = coords,
    aes(X, Y, label = localidad),
    color = 1 ,
    size = 2.5,
    fill = "white"
  ) +
  geom_point(aes(y = 37.570215, x  = -0.873569),
             size = 3,
             color = 2) +
  labs(x = NULL, y = NULL) +
  annotation_north_arrow(
    location = "br",
    which_north = "true",
    pad_x = unit(1, "cm"),
    pad_y = unit(.75, "cm"),
    style = north_arrow_fancy_orienteering,
    height = unit(1, "cm"),
    width = unit(1, "cm")
  ) +
  annotation_scale(location = "br", width_hint = 0.15) +
  theme_minimal() +
  coord_sf(
    xlim = c(-1.2,-0.65),
    ylim = c(37.5, 37.65),
    expand = FALSE
  ) +
  scale_y_continuous(breaks = c(37.55, 37.60))

iberian_map <- 
ggplot() + 
  geom_sf(data = ne_countries(country = 'spain', scale = "large", returnclass = "sf"), fill = 'gray60', color = "white") +
  geom_sf(data = ne_countries(country = 'portugal', scale = "large", returnclass = "sf"), fill = 'gray60', color = "white") +
  geom_sf(data = ne_countries(country = 'france', scale = "large", returnclass = "sf"), fill = 'gray60', color = "white") +
  labs(x = NULL, y = NULL) +
  theme_void() +
  theme(
    panel.border = element_rect(color = 'gray90', fill= NA)
  ) +
  geom_point(aes(y= 37.570215, x  = -0.873569), size = 2, color =2) +
  coord_sf(
    xlim = c(-10,4.5),
    ylim = c(35.5, 44.3),
    expand = FALSE
  )


fig_map <- 
  cowplot::ggdraw() +
  draw_plot(sites_map) +
  draw_plot(
    iberian_map,
    x = 0.8,
    y = .75,
    width = .2,
    height = .2
  )

fig_map

ggsave(plot = fig_map,
       device = 'png',
       filename = "figures/fig_1.png",
       width = 8, 
       height = 6,
       bg = "white",
       dpi = 600)

```

# Data exploration

## Distance

Locations were at increasing distance, in both direction (E and W), from the farm where the escape was originated.

```{r}
#| label: tbl-dist
#| tbl-cap: Distance and orientation in relation to the escape locality for each site.
esc_d %>% 
  distinct(localidad, distance, orientation) %>% 
  arrange(orientation, distance) %>% 
  kable()
```

## Density distribution

Fish density data was standardized to number of fish per 100 m2, resulting in continuous variable containing a disproportionately high number of zero values (73.6% of the 276 transects) and the non-zero data was highly overdispersed.

```{r}
#| label: fig-density
#| fig-cap: Histogram of the response variable (fish density).
#| fig-width: 10
#| fig-height: 4
ggarrange(
  ggplot(esc_d, aes(density)) +
  geom_histogram() + labs(subtitle = 'Raw'),
  ggplot(esc_d, aes(density)) +
  geom_histogram() +
  scale_x_continuous(trans = 'log1p') + labs(subtitle = 'log(x + 1) transformed')
  )
```

## Density by Month

```{r}
#| label: fig-bp1
#| fig-cap: Boxplot of fish density by month.
#| fig-width: 7
#| fig-height: 5

ggplot(esc_d, aes(month, density, fill = month)) +
  scale_y_continuous(trans = "log1p", breaks = c(0,10, 50, 250, 1000) ) +
  geom_boxplot(alpha = .4) +
  labs(x = 'Distance (m)' , y = Individuals~per~100~m^2, parse = T) +
  scale_fill_discrete(name = NULL)
```

## Density by location, month and site

```{r}
#| label: fig-dotplot
#| fig-cap: Dotplot of fish density by month and site.
#| fig-width: 7
#| fig-height: 7
ggplot(esc_d, aes(month, density)) +
  geom_point(alpha = .5, size = 3, aes(color = factor(sitio)), position =     position_jitter(width = .1)) +
  scale_y_continuous(trans = "log1p", expand = c(0, Inf), ) +
  # scale_x_date(date_labels = "%b %d") +
  facet_wrap(~localidad) 
```

## Density vs distance, month and direccion (E - W)

```{r}
#| label: fig-dist_plot1
#| fig-cap: Mean fish density (Â± SE) by distanbce, month and orientation (E and W).
#| fig-width: 7
#| fig-height: 5
ggplot(esc_d, aes(distance, density, color = month, group = month)) +
  scale_y_continuous(trans = "log1p", breaks = c(0,10,100,1000), labels = c(0,10,100,1000)) +
  geom_point(alpha = .2,
             position = position_jitter(width = .5)) +
  stat_summary(fun.data = "mean_se") +
  stat_summary(fun.data = mean_se,
               geom = 'line') +
  facet_wrap(~ fct_rev(orientation), scales = 'fixed') +
  theme_bw(base_size = 10) +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    strip.background = element_blank(),
    legend.background = element_rect(fill = "transparent"),
    panel.border = element_rect(color = "gray30"),
    axis.ticks = element_line(color =  "gray30")
  ) +
  labs(x = 'Distance from escape (km)' ,
       y = Density ~ (fish ~ 100 ~ m ^ -2),
       parse = T) +
  scale_color_tableau(name = NULL)

```

## Density by Orientation

```{r}
#| label: fig-dist_bp
#| fig-cap: Boxplot of fish density by month and orientation (E and W).
#| fig-width: 7
#| fig-height: 5
ggplot(esc_d, aes(month, density, fill = orientation)) +
  scale_y_continuous(trans = "log1p", breaks = c(0,10, 50, 250, 1000) ) +
  geom_boxplot(alpha = .4) +
  labs(x = NULL , y = Individuals~per~500~m^2, parse = T) +
  scale_fill_discrete(name = NULL)
```

# Fish density modelling

Fish count data was standardised to number of fish per 100 m2, resulting in continuous variable that was overdispered and contained a large number of zero values. As such, density data was analysed using generalised linear models fitted with Tweedie error distribution which is more robust to overdispersed and zero-rich data than other distribution families (e.g. negative binomial, gamma). Zero-inflation was tested with the testZeroInflation function of the package DHARMa that compares the observed number of zeros with the zeros expected from simulations.

Models were fitted with distance a continuous covariate, month as categorical with three levels (July, August and September), and their interaction (Distance x Month). The main effect of Orientation (W and E) was also included as a categorical fixed effect. Site nested in location was included a random factor to quatify the variability in density at a small spatial scale (100s m). Models were selected based on the AIC values and validated using simulated residulas using the simulateResiduals function in the package DHARMa.

The contribution of fixed and random effects to the performance of the model was calculated using marginal R2 (accounting for fixed effects only) and conditional pseudo-R2 (accounting for fixed and random effects, Nakagawa and Schielzeth, 2013).

## Test for zero-inflation

```{r}
zi_model <-
  glmmTMB(
    density ~ distance * month + orientation + (1|localidad:sitio),
    zi =  ~ distance + month,
    family = tweedie(link = "log"),
    data = esc_d
  )
```

```{r}
#| label: tbl-zi_test
#| tbl-cap: Tests for zero-inflation of the full model.
testZeroInflation(zi_model, plot = F) %>% 
  tidy() %>% 
  kable()
```

The test showed that the expected distribution of zeros is not larger than the observed values, thus there is no need to incorporate zero-inflation in the model.

```{r}
#| label: tbl-zi_summ
#| tbl-cap: Full model AIC and BIC values. 
glance(zi_model) %>% kable()
```

## GLMM without zero-inflation

```{r}
#| label: tbl-model_sel
#| tbl-cap: Model selection based on AIC values. 
m1 <-
  glmmTMB(
    density ~ distance * month + orientation + (1|localidad:sitio),
    family = tweedie(link = "log"),
    data = esc_d
  )

drop1(m1, trace = F) %>% 
  tidy() %>% 
  kable()

```

The lowest AIC value (716.97) was for the model with the distance and month interaction and no effect of orientation (density \~ distance \* month).

All AIC values were lower than that for the zero-inflated model.

## Model validation

```{r}
#| label: fig-model_val
#| fig-cap: Selected model validation based on simulated residual inspection. 
#| fig-width: 7
#| fig-height: 5
final_model <-
  glmmTMB(
    density ~ distance * month  + (1|localidad:sitio),
    family = tweedie(link = "log"),
    data = esc_d
  )

simulationOutput <- simulateResiduals(fittedModel = final_model, plot = F)
plot(simulationOutput)

# testResiduals(final_model)
```

There are no residual patterns or over-dispersion. The residuals test identified one outlier that could be potentially removed and some mild deviation that is not of concern.

## Model inference

```{r}
#| label: tbl-model_sum
#| tbl-cap: Final model summary. 
# tab_model(final_model, file = 'model_summary_table.doc')
tab_model(final_model)
```

The model predicted an average fish density (intercept of the model) of 43 individuals per 100 m^2^ (10.49 -- 178.96 95% CI) at the location of the escape. The density reduction rate varied significantly with sampling month (Distance x month, P\<0.05).

Fish density significantly decreased with distance, more specifically by 17% for every km away from the escape location. Fish density was predicted to decrease to 2% and 1% after one and two month of the escape event, respectively

Additionally, there was relatively site-to-site variability in fish density, evidenced by the small standard deviation for the effect of site nested in location, and the small difference between the conditional the R^2^ value marginal value (0.38 and 0.41, respectively).

## Model predictions

Create a prediction grid for the study area in the Murcian coast and calculate de distance for each pixel to the location of the escape event.

```{r}
# Prediction data
murcia_coast <- read_sf("data/murcia_coast.shp")

new_dat <-
  murcia_coast %>%
  st_bbox() %>%
  st_make_grid(
    cellsize = .001, # pixel size
    what = "centers"
  ) %>%
  st_intersection(murcia_coast) %>%
  st_coordinates() %>%
  as_tibble() %>%
  expand_grid(month = c('July',"August","September")) %>%
  mutate(distm(c(X = -0.87685249, Y = 37.57722501),.[,1:2]) %>% t() %>% as_tibble()/1000) %>%
  rename(distance = V1) %>%
  mutate(month = fct_relevel(month, c("July","August"))) %>%
  drop_na() %>% 
  mutate(localidad = "A", sitio = "B")
```

Use the glmmTMB model to get the predictions and sketch them.

```{r}
preds <-
  new_dat %>%
  predict(
    final_model,
    newdata = .,
    re.form = NA,
    type = "response",
    allow.new.levels = TRUE
  ) %>%
  as_tibble() %>%
  rename(preds_glmmTMB = value) %>%
  bind_cols(new_dat)

# write_csv(preds, "data/glmmTMB_preds.csv") 

pred_plot_funct <- function(data, .var) {
  ggplot() +
    geom_sf(
      data = murcia,
      fill = 'gray60',
      color = "gray60",
      linewidth = 2
    ) +
    geom_raster(data = data, aes(round(X, 10), round(Y, 10), fill = {{.var}})) +
    scale_fill_viridis_c(
      # trans = "log10",
      name = "Escapee density  per 500 m2",
      option = "H",
      labels = scales::comma_format(accuracy = 0.1)
    ) +
    # annotation_scale(location = "br", width_hint = 0.15) +
    theme_minimal() +
    theme(legend.position = "bottom") +
    facet_wrap(~ month, ncol = 1) +
    coord_sf(
      xlim = c(-1.2, -0.65),
      ylim = c(37.5, 37.65),
      expand = FALSE
    ) +
    scale_y_continuous(breaks = c(37.55, 37.60)) +
    labs(x = "Longitude", y = "Latitude")
}

glmmTMP_preds_maps <- 
pred_plot_funct(preds, preds_glmmTMB)

glmmTMP_preds_maps

```

# Fish size distribution

In addition to fish density, divers estimated total fish length of all fish in the transects.

```{r}
size <- read_csv('data/size_data.csv', show_col_types = F)
size_raw <-
  read_csv('data/size_data_raw.csv', show_col_types = F) %>%
  mutate(month = fct_relevel(month, "July", "August"),
         loc_dist = fct_reorder(loc_dist, distance)) %>% 
  filter(size<=30)
```

## Histograms of total fish length by month and location

```{r}
#| label: fig-hist_size
#| fig-cap: Histogram of fish length by month and location. 
#| fig-width: 12
#| fig-height: 6
ggplot(size_raw, aes(size, fill = loc_dist)) +
  geom_histogram(bins = 15) +
  facet_wrap(~month, scales = 'free_y') 
  
```

## Mean (Â±SD) total length by month and locality

```{r}
#| label: fig-mean_size
#| fig-cap: Mean (Â±SD) total fish length by month and locality.
#| fig-width: 8
#| fig-height: 6
ggplot(size_raw,
       aes(
         month,
         size,
         color = loc_dist ,
         group = loc_dist
       )) +
  stat_summary(fun.data = mean_sdl,   position = position_dodge(width = .7)) +
  scale_color_discrete(name = NULL) +
  labs(x = NULL, y = "Total fish length (cm)")

```

## Test for size between month

Length frequencies between months were compared using a randomization Kolmogorov & Smirnov test using the function *clus.lf* in the fishmethods package.

From package help file:

*Length frequency distributions of fishes are commonly tested for differences among groups (e.g., regions, sexes, etc.) using a two-sample Kolmogov-Smirnov test (K-S). Like most statistical tests, the K-S test requires that observations are collected at random and are independent of each other to satisfy assumptions. These basic assumptions are violated when gears (e.g., trawls, haul seines, gillnets, etc.) are used to sample fish because individuals are collected in clusters . In this case, the "haul", not the individual fish, is the primary sampling unit and statistical comparisons must take this into account.*

```{r}
#| label: tbl-size_test
#| tbl-cap: Results of the randomized Kolmogorov & Smirnov test comparing fish size among months. 
library(fishmethods)

clus_res <- 
clus.lf(group=size$month,haul=paste(size$transecto,size$toponimia),
        len=size$size, number=size$number, 
        binsize=5,resamples=100)

clus_res$results %>% kable()
```

There were significant differences in fish size frequency distribution between months, except between August and September.
